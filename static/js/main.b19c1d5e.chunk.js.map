{"version":3,"sources":["context/AppContext.js","layouts/NavBar.js","utils/libs.js","components/Courses.js","hooks/useCourses.js","Url.js","components/Course.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","AppProvider","Provider","NavBar","useContext","name","searchWithName","onNameChange","Navbar","bg","variant","style","margin","width","display","to","textDecoration","color","Nav","className","FormControl","type","placeholder","onChange","value","Button","onClick","str","no_words","split","splice","join","Courses","courses","authors","provider","level","category","providerChange","levelChange","authorChange","categoryChange","loading","Container","marginTop","marginBottom","Form","padding","Control","as","size","custom","map","a","CardDeck","length","course","key","courseId","Card","Img","src","imgUrl","Body","Title","title","Text","libs","shortDescription","Footer","textAlign","pathname","replace","toLowerCase","state","useCourses","useState","setCourses","setName","allCourses","setAllCourses","setAuthors","setProvider","setLevel","setCategory","setLoading","getCourses","axios","get","response","data","r","filter","ite","index","indexOf","author","console","log","useEffect","param","res","e","target","c","Course","history","single","setSingle","location","useLocation","push","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b19c1d5e.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext({});\n\nexport const AppProvider = AppContext.Provider;\n\nexport default AppContext;\n","import React, {useContext} from 'react';\nimport {Nav, Navbar, FormControl, Button} from \"react-bootstrap\";\nimport AppContext from \"../context/AppContext\";\nimport {Link} from \"react-router-dom\";\n\nconst NavBar = () => {\n    const {name, searchWithName, onNameChange} = useContext(AppContext);\n    return (\n        <Navbar bg=\"light\" variant=\"dark\" style={{margin: '1%'}}>\n            <div style={{width: '100%', display: 'flex'}}>\n                <div style={{width: '25%', }}>\n                    <Link to=\"/\" style={{textDecoration: 'none', color: 'black'}}>QUZE</Link>\n\n                </div>\n                <div style={{width: '75%'}}>\n                    <Nav className=\"mr-auto\">\n                        <Link to=\"/\" style={{textDecoration: 'none', color: 'black', width: '20%',}}>Trending</Link>\n                        <Link to=\"/\" style={{textDecoration: 'none', color: 'black', width: '20%',}}>Contact Us</Link>\n                        <Link to=\"/\" style={{textDecoration: 'none', color: 'black', width: '20%',}}>About</Link>\n                        <FormControl style={{width: '20%', color: 'black'}} type=\"text\" placeholder=\"search with course name\" name=\"name\" onChange={onNameChange} value={name} className=\"mr-sm-2\" />\n                        <Button variant=\"outline-info\" onClick={() => searchWithName(name)}>Search</Button>\n                    </Nav>\n                </div>\n            </div>\n        </Navbar>\n    );\n};\n\nexport default NavBar;","export default {\n    truncateWords : function(str, no_words){\n            return str.split(\" \").splice(0,no_words).join(\" \");\n    }\n}","import React, {Fragment, useContext} from 'react';\nimport {CardDeck, Card, Container, Form} from \"react-bootstrap\";\nimport NavBar from \"../layouts/NavBar\";\nimport libs from \"../utils/libs\";\nimport AppContext from \"../context/AppContext\";\nimport {Link} from \"react-router-dom\";\n\nconst Courses = () => {\n\n    const {courses, authors, provider, level, category, providerChange, levelChange, authorChange, categoryChange, loading} = useContext(AppContext)\n\n    const displayCourses = () => {\n        if(courses && courses.length){\n            return  courses.map(course => (\n                 <div style={{ width: '25%'}} key={course.courseId}>\n                     <Card style={{marginBottom: '9%'}}>\n                         <Card.Img variant=\"top\" src={course.imgUrl ? course.imgUrl : \"https://via.placeholder.com/150\"}/>\n                         <Card.Body>\n                             <Card.Title>{course.title}</Card.Title>\n                             <hr/>\n                             <Card.Text>\n                                 {libs.truncateWords(course.shortDescription, 20)}\n                             </Card.Text>\n                         </Card.Body>\n                         <Card.Footer>\n                             <div style={{display: 'flex'}}>\n                             <small style={{width: '50%', textAlign: 'inherit'}} className=\"text-muted\">{course.provider}</small>\n\n                                 <Link  style={{textDecoration: 'none',\n                                     color: 'black',\n                                 }}\n                                        to={{\n                                            pathname: `/course/${course.title.replace(/ /g, '-').toLowerCase()}`,\n                                            state: {\n                                                course\n                                            }\n                                        }}>\n                                     <small style={{width: '50%', textAlign: 'end'}} className=\"text-muted\">More Details</small>\n                                 </Link>\n\n                             </div>\n                         </Card.Footer>\n                     </Card>\n                 </div>\n             ))\n        }\n        return null\n    };\n\n    return (\n       <Fragment>\n           <NavBar/>\n           <Container style={{    marginTop: '3%'}}>\n               <div style={{width: '100%', display: 'flex', marginTop: '3%', marginBottom: '3%'}}>\n                   <Form style={{width: '25%', padding: '2%'}}>\n                       <Form.Control as=\"select\" size=\"lg\" custom\n                                     onChange={levelChange}\n                                     name=\"level\"\n                            >\n                           <option value=\"\">Filter By Level</option>\n                           {level ? level.map(a => (\n                               <option value={a}>{a}</option>\n                           )) : null}\n                       </Form.Control>\n                       {/*</Form.Group>*/}\n                   </Form>\n                   <Form style={{width: '25%', padding: '2%'}}>\n                       <Form.Control as=\"select\" size=\"lg\" custom\n                                     onChange={categoryChange}\n                                     name=\"category\">\n                           <option value=\"\">Filter By Category</option>\n                           {category ? category.map(a => (\n                               <option value={a}>{a}</option>\n                           )) : null}\n                       </Form.Control>\n                   </Form>\n                   <Form style={{width: '25%', padding: '2%'}}>\n                       <Form.Control as=\"select\" size=\"lg\" custom\n                           onChange={providerChange}\n                                     name=\"provider\">\n                           <option value=\"\">Filter By Provider</option>\n                           {provider ? provider.map(a => (\n                               <option value={a}>{a}</option>\n                           )) : null}\n                       </Form.Control>\n                   </Form>\n                   <Form style={{width: '25%', padding: '2%'}}>\n                       <Form.Control as=\"select\" size=\"lg\" custom\n                           onChange={authorChange}\n                                     name=\"author\">\n                           <option value=\"\">Filter By Author</option>\n                           {authors ? authors.map(a => (\n                               <option value={a}>{a}</option>\n                           )) : null}\n                       </Form.Control>\n                   </Form>\n               </div>\n\n               <div style={{display: 'flex', width: '100%'}}>\n                   <CardDeck>\n                       {loading ? <small>loading...</small> : displayCourses()}\n                   </CardDeck>\n               </div>\n           </Container>\n       </Fragment>\n    );\n};\n\nexport default Courses;","import {useEffect, useState} from \"react\";\nimport axios from 'axios'\nimport {COURSES_URL} from \"../Url\";\n\nconst useCourses = () => {\n    const [courses, setCourses] = useState([]);\n    const [name, setName] = useState('')\n    const [allCourses, setAllCourses] = useState([]);\n    const [authors, setAuthors] = useState([]);\n    const [provider, setProvider] = useState([]);\n    const [level, setLevel] = useState([]);\n    const [category, setCategory] = useState([]);\n    const [loading, setLoading] = useState(false)\n\n    const getCourses = async () =>{\n        try {\n            setLoading(true)\n            const response = await axios.get(`${COURSES_URL}`);\n            if(response.data){\n                setLoading(false)\n                setCourses(response.data);\n                setAllCourses(response.data);\n                setLevel(response.data.map(r =>(r.level)).filter((ite, index) =>{return response.data.map(r =>(r.level)).indexOf(ite) === index}))\n                setCategory(response.data.map(r =>(r.category)).filter((ite, index) =>{return response.data.map(r =>(r.category)).indexOf(ite) === index}))\n                setProvider(response.data.map(r =>(r.provider)).filter((ite, index) =>{return response.data.map(r =>(r.provider)).indexOf(ite) === index}))\n                setAuthors(response.data.map(r =>(r.author)).filter((ite, index) =>{return response.data.map(r =>(r.author)).indexOf(ite) === index}))\n             }\n        } catch (e) {\n            if(e){\n                console.log('something went wrong');\n                setLoading(false)\n            }\n        }\n    };\n    useEffect(() => {\n        getCourses()\n    }, []);\n\n    const searchWithName = (param) => {\n        if(param){\n            setCourses(allCourses.filter(res => res.title === param));\n        }\n    };\n\n    const onNameChange = (e) => {\n        const {value} = e.target;\n        setName(value)\n    };\n\n    const providerChange = (e)  => {\n        const {value} = e.target;\n        if(value){\n            setCourses(allCourses.filter(c => c.provider === value))\n        }\n    }\n\n    const levelChange = (e)  => {\n        const {value} = e.target;\n        if(value){\n            setCourses(allCourses.filter(c => c.level === value))\n        }\n    }\n\n    const authorChange = (e)  => {\n        const {value} = e.target;\n        if(value){\n            setCourses(allCourses.filter(c => c.author === value))\n        }\n    }\n\n    const categoryChange = (e)  => {\n        const {value} = e.target;\n        if(value){\n            setCourses(allCourses.filter(c => c.category === value))\n        }\n    }\n\n\n    return {courses, name, searchWithName, onNameChange, authors, provider, level, category, providerChange, levelChange, authorChange, categoryChange, loading}\n};\n\nexport default useCourses;","export const COURSES_URL = 'https://quze-intern-test.s3.us-east-2.amazonaws.com/course-data.json'","import React, {useEffect, useState} from 'react';\nimport { useLocation} from 'react-router-dom'\nimport NavBar from \"../layouts/NavBar\";\nimport {Card, Container} from \"react-bootstrap\";\n\nconst Course = ({history}) => {\n    const [single, setSingle] = useState({});\n\n    let location = useLocation();\n    useEffect(() => {\n        if(location.state && location.state.course){\n            const {course} = location.state;\n\n            setSingle(course)\n        } else {\n            history.push(\"/\")\n        }\n    }, [location.state, history]);\n\n    return (\n        <div>\n            <NavBar/>\n            <Container>\n                <div className=\"single-product\">\n                    <Card>\n                        <Card.Img variant=\"top\" src={single.imgUrl ? single.imgUrl : \"https://via.placeholder.com/150\"}/>\n                        <hr/>\n                        <Card.Body>\n                            <Card.Title>{single.title}</Card.Title>\n                            <hr/>\n                            <Card.Text>\n\n                                {single.shortDescription}\n                            </Card.Text>\n                            <hr/>\n                            <div className=\"product-details\">\n                                <Card.Text style={{width: '50%'}}>\n                                    Author: {single.author}\n                                </Card.Text>\n                                <Card.Text style={{width: '50%'}}>\n                                    Level: {single.level}\n                                </Card.Text>\n                            </div>\n                        </Card.Body>\n                        <Card.Footer>\n                            <div style={{display: 'flex'}}>\n                                <small style={{width: '50%', textAlign: 'inherit'}} className=\"text-muted\"> Provider: {single.provider}</small>\n                            </div>\n                        </Card.Footer>\n                    </Card>\n\n                </div>\n            </Container>\n        </div>\n    );\n};\n\nexport default Course;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Courses from \"./components/Courses\";\nimport {AppProvider} from \"./context/AppContext\";\nimport useCourses from \"./hooks/useCourses\";\nimport Course from \"./components/Course\";\n\nconst App = () => {\n    const {courses, searchWithName, name, onNameChange, authors, provider, level, category, providerChange, levelChange, authorChange, categoryChange, loading} = useCourses();\n\n    return (\n      <Switch>\n          <AppProvider value={{courses, name, searchWithName, onNameChange, authors, provider, level, category, providerChange, levelChange, authorChange, categoryChange, loading}}>\n          <Route exact path=\"/\" component={Courses}/>\n          <Route exact path=\"/course/:name\" component={Course} />\n          </AppProvider>\n      </Switch>\n\n  );\n};\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n        <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}